name: Build and deliver containers

on:
  push:
    branches:
      - main  

jobs:
  deviceservice:
    runs-on: ubuntu-latest
    name: Build, test, and deliver DeviceService
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build, test, and package
        working-directory: ./DeviceService
        run: mvn clean package

      - name: Docker login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Docker build
        working-directory: ./DeviceService
        run: docker build -t ${{ secrets.DOCKER_NAME }}/device-service:latest .

      - name: Docker push
        run: docker push ${{ secrets.DOCKER_NAME }}/device-service:latest

  houseservice:
    runs-on: ubuntu-latest
    name: Build, test, and deliver HouseService
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build, test, and package
        working-directory: ./HouseService
        run: mvn clean package

      - name: Docker login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Docker build
        working-directory: ./HouseService
        run: docker build -t ${{ secrets.DOCKER_NAME }}/house-service:latest .

      - name: Docker push
        run: docker push ${{ secrets.DOCKER_NAME }}/house-service:latest

  messageservice:
    runs-on: ubuntu-latest
    name: Build, test, and deliver MessageService
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build, test, and package
        working-directory: ./MessageService
        run: mvn clean package

      - name: Docker login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Docker build
        working-directory: ./MessageService
        run: docker build -t ${{ secrets.DOCKER_NAME }}/message-service:latest .

      - name: Docker push
        run: docker push ${{ secrets.DOCKER_NAME }}/message-service:latest

  apigateway:
    runs-on: ubuntu-latest
    name: Build, test, deliver api-gateway
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build, test, and package
        working-directory: ./api-gateway
        run: mvn clean package

      - name: Docker login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Docker build
        working-directory: ./api-gateway
        run: docker build -t ${{ secrets.DOCKER_NAME }}/api-gateway:latest .

      - name: Docker push
        run: docker push ${{ secrets.DOCKER_NAME }}/api-gateway:latest
